% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{log_marginal_Q_identity}
\alias{log_marginal_Q_identity}
\title{R Function to compute the cluster-specific marginal likelihood (just for Q=I)}
\usage{
log_marginal_Q_identity(Y, p, theta, psi)
}
\arguments{
\item{Y}{the data for the current cluster (a subset of observations.)}

\item{p}{prevalence parameter for each machine; should be a vector of dimension
M=L.}

\item{theta}{true positive rates}

\item{psi}{true positive rates}
}
\value{
log of marginal likelihood given other model parameters.
}
\description{
This R function computes the marginal likelihood by integrating over
the distribution of component specific parameter (e.g., machine usage profiles).
This function conditions upon a few model parameters: the true and false positive
rates (theta and psi), the Q matrix and {p}-the prevalence parameter for each machines.
}
\examples{
# simulate data:
L0 <- 100
options_sim0  <- list(N = 200,  # sample size.
                      M = 3,   # true number of machines.
                      L = L0,   # number of antibody landmarks.
                      K = 8,    # number of true components.,
                     theta = rep(0.8,L0), # true positive rates
                     psi   = rep(0.01,L0), # false positive rates
                     alpha1 = 1, # half of the people have the first machine.
                     frac = 0.2, # fraction of positive dimensions (L-2M) in Q.
                     #pop_frac = rep(1/K0,K0) # population prevalences.
                     #pop_frac = (1:K0)/sum(1:K0) # population prevalences.
                     pop_frac = c(rep(2,4),rep(1,4)) # population prevalences.
)

 simu     <- simulate_data(options_sim0, SETSEED=TRUE)
 simu_dat <- simu$datmat
 Y <- simu_dat
 Q <- simu$Q
 p <- rep(0.5,L0) #<----- M must equal L.
 theta <- options_sim0$theta
 psi   <- options_sim0$psi

log_marginal_Q_identity(Y, p, theta, psi) # <-- this is the Rcpp implementation.

}
