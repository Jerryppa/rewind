% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_mcmc.R
\name{log_marginal_one_column}
\alias{log_marginal_one_column}
\title{Compute marginal likelihood for observations in a cluster
NB: this only works for Q = I; potential errors with the integration over latent states -
one cannot factorize the marginal likelihood for an arbitrary Q. Can delete this if
we have a general marginal likelihood function that works for all dimensions.}
\usage{
log_marginal_one_column(Yl, Ql, p, thetal, psil)
}
\arguments{
\item{Yl}{a column of the multivariate binary data}

\item{Ql}{l-th column of the Q matrix}

\item{p}{prevalence of binary latent states; a vector of length identical to the dimension
of latent states.}

\item{thetal, psil}{True and false positive rates (between 0 and 1)

# simulate data:
L0 <- 100
options_sim0  <- list(N = 200,  # sample size.
                     M = 3,   # true number of machines.
                     L = L0,   # number of antibody landmarks.
                     K = 8,    # number of true components.,
                     theta = rep(0.8,L0), # true positive rates
                     psi   = rep(0.01,L0), # false positive rates
                     alpha1 = 1 # half of the people have the first machine.
)

simu     <- simulate_data(options_sim0, SETSEED=TRUE)
simu_dat <- simu$datmat
Y <- simu_dat
l <- 20
log_marginal_one_column(Y[,l], Q[,l], p, theta[l], psi[l])}
}
\value{
log of marginal likelihood given other model parameters.
}
\description{
This function computes the marginal likelihood by integrating over
the distribution of component specific parameter (e.g., discrete latent states).
This function conditions upon a few model parameters: the true and false positive
rates (theta and psi), the Q matrix and {p}-the prevalence parameters for binary
latent states.
}
